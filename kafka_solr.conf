input {
   kafka {
          auto_offset_reset => "largest"
          reset_beginning => false
         # rebalance_max_retries => 3
         # rebalance_backoff_ms => 3000
         # consumer_timeout_ms => 30000
          topic_id => "esbtopic"
          zk_connect => "localhost:2181"
   }
kafka {
          auto_offset_reset => "largest"
          reset_beginning => false
          topic_id => "b2b_apps_mars"
          zk_connect => "localhost:2181"
   }
   kafka{
	auto_offset_reset => "largest"
	reset_beginning => false
	topic_id => "b2b_apps_bacchus"
	zk_connect => "localhost:2181"
   }
#   kafka{
#        auto_offset_reset => "largest"
#        reset_beginning => false
#        topic_id => "flow_apps_api_message_in_llu_mars"
#        zk_connect => "localhost:2181"
#   }
#  kafka{
#        auto_offset_reset => "largest"
#        reset_beginning => false
#        topic_id => "flow_apps_api_message_in_llu_bacchus"
#        zk_connect => "localhost:2181"
#   }
   



}


filter {

       urldecode {
                field => "message"
}

                grok {
                    break_on_match => false

                        patterns_dir => "/software/TSA/vishwas_logstash/logstash-2.3.4/patterns"
                        match => { 'message' => ['%{INSTALLATION_DN:INSTALLATION_DN}',
                                        '%{REQUESTERS_ID:REQUESTERS_ID}',
                                         '%{REQUEST_KEY_PREFIX}%{BASIC_STRING:REQUEST_KEY}',
                                        '%{OPERATION_PREFIX}%{BASIC_STRING:OPERATION}',
                                        '%{FROM_PREFIX}%{BASIC_STRING:FROM}',
                                        '%{TO_PREFIX}%{BASIC_STRING:TO}',
#                                        '%{DATESTAMP:COMPONENT_DATETIME}',
                                        '%{DATE:COMPONENT_DATE}',
                                        '%{TIME:COMPONENT_TIME}',
                                        '<L:SEVERITY>%{BASIC_STRING:LOG_SEVERITY}',
					'ServiceId>%{BASIC_STRING:SERVICE_ID}',
					'InstallationDn>%{BASIC_STRING:INSTALLATION_DN}'
                                        ]}
                        match => {'path' => '%{CAPABILITY_PREFIX}%{BASIC_STRING:CAPABILITY}'}
                }
        mutate{
                gsub => [
                        'message', "&lt;", "<",
                        'message', "&gt;", ">",
                        'message', "&quot;", '"'
                ]
}

        mutate{

                rename => { "message" => "MESSAGE"}
                rename => { "timestamp" => "KAFKA_TIMESTAMP"}
                rename => {"path" => "PATH"}
                rename => {"type" => "ENVIRONMENT"}
                rename => {"host" => "HOST"}

		add_field => {"COMPONENT_DATETIME" => "%{COMPONENT_DATE} %{COMPONENT_TIME}"}
                #remove_field => ["timestamp", "@version", "_version_", "_timestamp", "tags"]
}


#               if ![LOG_TIMESTAMP]{
#                       mutate{
 #                      add_field => { "LOG_TIMESTAMP" => "1970-01-01T00:00:00.000Z"
  #                             }
#                       }
#               }



}

output {
#  solr {
#    url => "http://localhost:8983/solr/ore2e"
#  }


  solr {
    url => "http://localhost:8984/solr/ore2e"
  }

 #stdout{}

}
