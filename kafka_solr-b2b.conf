input {
   kafka {
          auto_offset_reset => "smallest"
          reset_beginning => true
          topic_id => "b2b_apps_mars"
          zk_connect => "localhost:2181"
   }



}


filter {

       urldecode {
                field => "message"
}
        mutate{
                gsub => [
                        'message', "&lt;", "<",
                        'message', "&gt;", ">",
                        'message', "&quot;", '"'
                ]
}

                grok {
                    break_on_match => false

                        patterns_dir => "/software/TSA/vishwas_logstash/logstash-2.3.4/patterns"
                        match => { 'message' => [
					'%{INSTALLATION_DN:INSTALLATION_DN}',
                                        '%{REQUESTERS_ID:REQUESTERS_ID}',
                                        '%{REQUEST_KEY_PREFIX}%{BASIC_STRING:REQUEST_KEY}',
                                        '%{OPERATION_PREFIX}%{BASIC_STRING:OPERATION}',
                                        '%{FROM_PREFIX}%{BASIC_STRING:FROM}',
                                        '%{TO_PREFIX}%{BASIC_STRING:TO}',
					'LineStatus>%{BASIC_STRING:KCI_STATUS}',
					'TEXT>%{BASIC_STRING:BPTM_TEXT}',
					'BuyersID>%{BASIC_STRING:BUYERS_ID}',
                                        '%{DATE:COMPONENT_DATE}',
                                        '%{TIME:COMPONENT_TIME}',
					'graphID=%{GRAPH_ID:BPTM_GRAPH_ID}',
					'HOST>%{BASIC_STRING:BPTM_HOST}',
					'IP>%{IPV4:BPTM_IP}',
					'MessageType=%{BASIC_STRING:MESSAGE_TYPE}',
					'busTxnUsr=%{BASIC_STRING:BUS_TXN_USER}',
					'busTxnSys=%{BASIC_STRING:BUS_TXN_SYS}',
					'JMSXDeliveryCount=%{NONNEGINT:JMSX_DELIVERY_COUNT}'
                                        ]}
			match => {'path' => '%{CAPABILITY_PREFIX}%{BASIC_STRING:CAPABILITY}'}
			tag_on_failure => [ ]
                }

        mutate{
		add_field => {"COMPONENT_NAME" => "B2B"}
		add_field => {"ENVIRONMENT" => "MARS"}
		add_field => {"COMPONENT_TIMESTAMP" => "%{COMPONENT_DATE} %{COMPONENT_TIME}"}



                rename => { "message" => "MESSAGE"}
                rename => { "event_timestamp" => "KAFKA_TIMESTAMP"}
                rename => {"path" => "PATH"}
                rename => {"type" => "ENVIRONMENT"}
                rename => {"host" => "HOST"}

}

prune {
        whitelist_names => [ "MESSAGE", "KAFKA_TIMESTAMP", "COMPONENT_TIMESTAMP", "JMSX_DELIVERY_COUNT","BUS_TXN_SYS","BUS_TXN_USR","BPTM_IP","BPTM_HOST","BPTM_GRAPH_ID","BUYERS_ID","BPTM_TEXT","KCI_STATUS","TO","FROM","CAPABILITY","PATH","BPTM_TEXT","OPERATION","REQUEST_KEY","COMPONENT_NAME" ]
}



}

output {


  solr {
    url => "http://localhost:8984/solr/b2b"
  }

stdout {
	codec => "dots"
}

}
