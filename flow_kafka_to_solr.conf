input{
  kafka{
        auto_offset_reset => "smallest"
        reset_beginning => true
        topic_id => "flow_apps_api_message_in_llu_mars"
        zk_connect => "localhost:2181"
   }
  kafka{
        auto_offset_reset => "smallest"
        reset_beginning => true
        topic_id => "flow_apps_api_message_in_llu_bacchus"
        zk_connect => "localhost:2181"
   }

}
filter{

		
		if [created_ts]   {
			mutate
    		{
				add_field => {
					"LOG_TIME" => "%{[created_ts]}"
				}	
			}
		}	
		else if [insert_date]  {
			mutate
    		{
				add_field => {
					"LOG_TIME" => "%{[insert_date]}"
				}	
			}
		}	
		else if [msg_insert_date]  {
			mutate
    		{
				add_field => {
					"LOG_TIME" => "%{[msg_insert_date]}"
				}	
			}
		}
		
		
	    grok {
	        break_on_match => false
		patterns_dir => "/software/TSA/vishwas_logstash/logstash-2.3.4/patterns"
                #patterns_dir => ""
                 match => { 'message_text' => [
				 '%{REQUEST_KEY_PREFIX}%{BASIC_STRING:REQUEST_KEY}',
               			 '%{OPERATION_PREFIX}%{BASIC_STRING:OPERATION}',
               			 '%{FROM_PREFIX}%{BASIC_STRING:FROM}',
				 '%{TO_PREFIX}%{BASIC_STRING:TO}'                                       
                      ]
					 }
           # match => {'path' => '%{CAPABILITY_PREFIX}%{BASIC_STRING:CAPABILITY}'}
						 
        }
	grok {
   		 match => ["LOG_TIME", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}T%{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second}.%{GREEDYDATA:millsec}$"]
   		 add_field => ["COMPONENT_DATETIME", "%{year}-%{month}-%{day} %{hour}:%{minute}:%{second}"]
  	}
        mutate{
                gsub => [
                        'message_text', "&lt;", "<",
                        'message_text', "&gt;", ">",
                        'message_text', "&quot;", '"'
                ]
		}

        mutate{

                rename => { "message_text" => "MESSAGE"}
                rename => { "@timestamp" => "KAFKA_TIMESTAMP"}
               # rename => {"path" => "PATH"}
                rename => {"type" => "ENVIRONMENT"}
                rename => {"host" => "HOST"}

               # add_field => {"COMPONENT_DATETIME" => "%{COMPONENT_DATE} %{COMPONENT_TIME}"}
			
               # remove_field => [ "%{COMPONENT_DATE}", "%{COMPONENT_TIME}" ]
		remove_field=>["tags"]
		remove_field => ["month", "day", "year", "hour", "minute","millsec"]
	}





}	





output {
  solr {
	codec => json  
  	url => "http://localhost:8984/solr/flow_2411"
  }

#stdout { 
# debug => true
#codec => json } 
#stdout{}

}


